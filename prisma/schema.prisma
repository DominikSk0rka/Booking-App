generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Hotel{
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  title String @db.String
  description String @db.String
  image String
  country String
  city String
  locationDescription String @db.String
  gym Boolean @default(false)
  spa Boolean @default(false)
  bar Boolean @default(false)
  laundry Boolean @default(false)
  restourant Boolean @default(false)
  freeParking Boolean @default(false)
  bikeRental Boolean @default(false)
  freeWifi Boolean @default(false)
  movieNights Boolean @default(false)
  swimmingPool Boolean @default(false)
  coffeShop Boolean @default(false)
  addedAt DateTime @default(now())
  updatedAt DateTime @default(now())
  rooms Room[]
  bookings Booking[]


}


  model Room{
    id  String  @id @default(auto()) @map("_id") @db.ObjectId
    title String
    description String @db.String
    bedCount Int  @default(0)
    guestCount Int  @default(0)
    bathroomCount Int @default(0)
    kingBed Int @default(0)
    queenBen Int  @default(0)
    image String
    breakFastPrice Int
    roomPrice Int
    roomService Boolean @default(false)
    TV Boolean @default(false)
    freeWifi Boolean @default(false)
    cityView Boolean @default(false)
    oceanView Boolean @default(false)
    forestView Boolean @default(false)
    mountainView Boolean @default(false)
    airCondition Boolean @default(false)
    soundProofed Boolean @default(false)

    Hotel Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade)
    hotelId String

    Booking Booking[]


  }


  model Booking{
     id                 String  @id @default(auto()) @map("_id") @db.ObjectId
    userName String
    usierId String
    hotelOwnerId String
    startDate DateTime
    endDate DateTime
    breakFastIncluded Boolean
    currency String
    totalPrice Int
    paymentStatus Boolean @default(false)
    paymentIntentId String @unique
    bookedAt DateTime @default(now())
    
    Hotel Hotel? @relation(fields: [hotelId], references: [id])
    hotelId String
    Room Room? @relation(fields: [roomlId], references: [id])
    roomlId String
  }